{"ast":null,"code":"var _jsxFileName = \"/home/dev/minesweeper/src/minesweeper/Minesweeper.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Minesweeper extends React.Component {\n  constructor(props) {\n    super(props); // Read in props\n\n    this.state = {\n      size: props.size,\n      mines: props.mines,\n      map: []\n    }; // Create a new mine field\n\n    this.createNewMap();\n  }\n\n  createNewMap() {\n    var _map = this.state.map; // Create the blank map\n\n    for (var x = 0; x < this.state.size; x++) {\n      _map[x] = [];\n\n      for (var y = 0; y < this.state.size; y++) {\n        _map[x][y] = {\n          \"flag\": false,\n          \"open\": false,\n          \"mine\": false\n        };\n      }\n    } // Randomize mine locations\n\n\n    for (var i = 0; i < this.state.mines; i++) {\n      _map[Math.floor(Math.random() * this.state.size)][Math.floor(Math.random() * this.state.size)].mine = true;\n    } // Store it\n\n\n    this.setState({\n      map: _map\n    });\n  }\n\n  leftClickHandler(e, x, y) {\n    e.preventDefault();\n    var _map = this.state.map;\n    _map[x][y].open = true;\n    this.setState({\n      map: _map\n    }, () => {\n      if (this.state.map[x][y].mine) {\n        console.log(\"Boom\");\n      }\n    });\n  }\n\n  rightClickHandler(e, x, y) {\n    e.preventDefault();\n    var _map = this.state.map;\n    _map[x][y].flag = true;\n    this.setState({\n      map: _map\n    });\n  }\n\n  countNeighborBombs(x, y) {\n    for (var i = x - 1; i < x + 1; i++) {\n      for (var j = y - 1; j < y + 1; j++) {\n        console.log(x);\n      }\n    }\n  }\n\n  determineContent(x, y) {\n    if (this.state.map[x][y].open) {\n      if (this.state.map[x][y].mine) {\n        return \"X\";\n      } else {\n        return this.countNeighborBombs(x, y).toString();\n      }\n    } else if (this.state.map[x][y].flag) {\n      return \"☑\";\n    } else {\n      return \"☐\";\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Array.from(Array(this.state.size).keys()).map(x => {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Array.from(Array(this.state.size).keys()).map(y => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                onClick: e => this.leftClickHandler(e, x, y),\n                onContextMenu: e => this.rightClickHandler(e, x, y),\n                children: this.determineContent(x, y)\n              }, y, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this);\n            })\n          }, x, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Minesweeper;","map":{"version":3,"sources":["/home/dev/minesweeper/src/minesweeper/Minesweeper.js"],"names":["React","Minesweeper","Component","constructor","props","state","size","mines","map","createNewMap","_map","x","y","i","Math","floor","random","mine","setState","leftClickHandler","e","preventDefault","open","console","log","rightClickHandler","flag","countNeighborBombs","j","determineContent","toString","render","Array","from","keys"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Minesweeper extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // Read in props\n        this.state = {\n            size: props.size,\n            mines: props.mines,\n            map: []\n        };\n\n        // Create a new mine field\n        this.createNewMap();\n    }\n\n    createNewMap() {\n        var _map = this.state.map;\n\n        // Create the blank map\n        for (var x = 0; x < this.state.size; x++) {\n            _map[x] = [];\n\n            for (var y = 0; y < this.state.size; y++) {\n                _map[x][y] = {\n                    \"flag\": false,\n                    \"open\": false,\n                    \"mine\": false\n                }\n            }\n        }\n\n        // Randomize mine locations\n        for (var i = 0; i < this.state.mines; i++) {\n            _map[Math.floor(Math.random() * this.state.size)][Math.floor(Math.random() * this.state.size)].mine = true;\n        }\n\n        // Store it\n        this.setState({ map: _map });\n    }\n\n    leftClickHandler(e, x, y) {\n        e.preventDefault();\n\n        var _map = this.state.map;\n        _map[x][y].open = true;\n        this.setState({map:_map}, () => {\n            if(this.state.map[x][y].mine) {\n                console.log(\"Boom\");\n            }\n        });\n    }\n\n    rightClickHandler(e, x, y) {\n        e.preventDefault();\n\n        var _map = this.state.map;\n        _map[x][y].flag = true;\n        this.setState({map:_map});\n    }\n\n    countNeighborBombs(x, y) {\n        for(var i = x-1; i < x+1; i++) {\n            for (var j = y-1; j < y+1; j++) {\n                console.log(x)\n            }\n        }\n    }\n\n    determineContent(x, y) {    \n        if(this.state.map[x][y].open) {\n            if(this.state.map[x][y].mine) {\n                return \"X\";\n            } else {\n                return this.countNeighborBombs(x, y).toString();\n            }\n        } else if (this.state.map[x][y].flag) {\n            return \"☑\";\n        } else {\n            return \"☐\"\n        }\n    }\n\n    render() {\n        return (\n            <table>\n                <thead>\n                </thead>\n                <tbody>\n                    {Array.from(Array(this.state.size).keys()).map(x => {\n                        return (\n                            <td key={x}>\n                                {Array.from(Array(this.state.size).keys()).map(y => {\n                                    return (\n                                        <tr onClick={(e)=>this.leftClickHandler(e, x, y)}\n                                            onContextMenu={(e)=>this.rightClickHandler(e, x,y)}\n                                            key={y}>\n                                                {this.determineContent(x, y)}\n                                        </tr>\n                                    );\n                                })}\n                            </td>\n                        )\n                    })}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nexport default Minesweeper;"]},"metadata":{},"sourceType":"module"}